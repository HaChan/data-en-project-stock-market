networks:
  stock-market-network:
    external: true

x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: airflow.dockerfile
    network: host
  extra_hosts:
    - "host.docker.internal:host-gateway"
  env_file:
    - .env
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: SequentialExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
    AIRFLOW__CORE__LOAD_EXAMPLES: False
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: True
    _PIP_ADDITIONAL_REQUIREMENTS: ${_PIP_ADDITIONAL_REQUIREMENTS:-}
  volumes:
    - airflow-data:/opt/airflow/
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/jobs:/opt/airflow/jobs
    - ./airflow/misc:/opt/airflow/misc
    - /var/run/docker.sock:/var/run/docker.sock
  user: "${AIRFLOW_UID:-50000}:0"
  networks:
    - stock-market-network

services:
  airflow-webserver:
    <<: *airflow-common
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: webserver

  airflow-scheduler:
    <<: *airflow-common
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: scheduler

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        echo "${AIRFLOW_UID}:0"
        exec /entrypoint airflow version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
      _PIP_ADDITIONAL_REQUIREMENTS: ''
    user: "${AIRFLOW_UID:-50000}:0"

volumes:
  airflow-data:
